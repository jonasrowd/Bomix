#INCLUDE "TOTVS.CH"
#INCLUDE "RWMAKE.CH"          

#DEFINE __CCARTEIRA "109"
#DEFINE __CMOEDA    "9"

/*/{PROTHEUS.DOC} BLTITAU
	PROGRAMA PARA GERAR OS BOLETOS DO ITAU EM PDF
	@TYPE FUNCTION
	@VERSION  12.1.25
	@AUTHOR JONAS MACHADO
	@SINCE 14/06/2021
/*/
USER FUNCTION BLTITAU(CNOTA)

	//LOCAL	APERGS := {}
	PRIVATE LEXEC      := .F.
	PRIVATE CINDEXNAME := ''
	PRIVATE CINDEXKEY  := ''
	PRIVATE CFILTER    := ''

	DEFAULT CNOTA := SPACE(09)

	TAMANHO  := "M"
	TITULO   := "IMPRESSAO DE BOLETO COM CODIGO DE BARRAS"
	CDESC1   := "ESTE PROGRAMA DESTINA-SE A IMPRESSAO DO BOLETO COM CODIGO DE BARRAS."
	CDESC2   := ""
	CDESC3   := ""
	CSTRING  := "SE1"
	WNREL    := "BOLETO"
	LEND     := .F.
	CPERG     := PADR("BLTITAU",10)
	ARETURN  := {"ZEBRADO", 1,"ADMINISTRACAO", 2, 2, 1, "",1 }
	NLASTKEY := 0
	CNF	:= CNOTA

		DBSELECTAREA("SE1") 

		IF !PERGUNTE (CPERG,.T.)
			RETURN
		ENDIF

		IF EMPTY(CNF)
			/*	WNREL := SETPRINT(CSTRING,WNREL,CPERG,@TITULO,CDESC1,CDESC2,CDESC3,.F.,,,TAMANHO,,)
			
			IF NLASTKEY == 27
			SET FILTER TO
			RETURN
			ENDIF
			
			SETDEFAULT(ARETURN,CSTRING)
			
			IF NLASTKEY == 27
			SET FILTER TO
			RETURN
			ENDIF
			*/
			CINDEXNAME	:= CRIATRAB(NIL,.F.)
		//	CINDEXKEY	:= "E1_PORTADO+E1_CLIENTE+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+DTOS(E1_EMISSAO)"
			CINDEXKEY	:= "E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+DTOS(E1_EMISSAO)+E1_PORTADO+E1_CLIENTE"
			CFILTER		+= "E1_FILIAL=='"+XFILIAL("SE1")+"'.AND.E1_SALDO>0.AND."
			CFILTER		+= "E1_PREFIXO>='" + MV_PAR01 + "'.AND.E1_PREFIXO<='" + MV_PAR02 + "'.AND."  
			CFILTER     += "E1_PORTADO<>'"+"CX1"+"'.AND."
			CFILTER		+= "E1_NUM>='" + MV_PAR03 + "'.AND.E1_NUM<='" + MV_PAR04 + "'.AND."
			CFILTER		+= "E1_PARCELA>='" + MV_PAR05 + "'.AND.E1_PARCELA<='" + MV_PAR06 + "'.AND."
			CFILTER		+= "E1_CLIENTE>='" + MV_PAR09 + "'.AND.E1_CLIENTE<='" + MV_PAR10 + "'.AND."
			CFILTER		+= "E1_LOJA>='" + MV_PAR11 + "'.AND.E1_LOJA<='"+MV_PAR12+"'.AND."
			CFILTER		+= "DTOS(E1_EMISSAO)>='"+DTOS(MV_PAR13)+"'.AND.DTOS(E1_EMISSAO)<='"+DTOS(MV_PAR14)+"'.AND."
			CFILTER		+= "DTOS(E1_VENCREA)>='"+DTOS(MV_PAR15)+"'.AND.DTOS(E1_VENCREA)<='"+DTOS(MV_PAR16)+"'.AND."
			CFILTER		+= "E1_NUMBOR>='" + MV_PAR17 + "'.AND.E1_NUMBOR<='" + MV_PAR18 + "'.AND."
			CFILTER		+= "!(E1_TIPO$MVABATIM)
			
			
			IF EMPTY(MV_PAR19)
				CFILTER		+= ".AND. E1_PORTADO>='" + MV_PAR07 + "'.AND.E1_PORTADO<='" + MV_PAR08 + "' "
				CFILTER		+= ".AND. E1_PORTADO<>'   '"
			ELSE
				CFILTER		+= ".AND. (E1_PORTADO =='" + MV_PAR19 + "' .OR. EMPTY(E1_PORTADO)) "
			ENDIF

			IF !EMPTY(MV_PAR20)
				CFILTER		+= ".AND. (E1_AGEDEP=='" + MV_PAR20 + "' .OR. EMPTY(E1_AGEDEP)) "
			ENDIF

			IF !EMPTY(MV_PAR21)
				CFILTER		+= ".AND. (E1_CONTA=='" + MV_PAR21 + "' .OR. EMPTY(E1_CONTA)) "
			ENDIF
		ELSE
			CFILTER		+= "E1_NUM = '" + CNF + "' "
		ENDIF                                                                                    

		CFILTER     += " .AND. E1_PORTADO <> 'CX1' "        
     
		INDREGUA("SE1", CINDEXNAME, CINDEXKEY,, CFILTER, "AGUARDE SELECIONANDO REGISTROS....")
		DBSELECTAREA("SE1")
		#IFNDEF TOP
			DBSETINDEX(CINDEXNAME + ORDBAGEXT())
		#ENDIF
		DBGOTOP()

		IF EMPTY(CNF)
			
			@ 001,001 TO 400,700 DIALOG ODLG TITLE "SELEÇÃO DE TITULOS"
			@ 001,001 TO 170,350 BROWSE "SE1" MARK "E1_OK"
			@ 180,310 BMPBUTTON TYPE 01 ACTION (LEXEC := .T.,CLOSE(ODLG))
			@ 180,280 BMPBUTTON TYPE 02 ACTION (LEXEC := .F.,CLOSE(ODLG))
			ACTIVATE DIALOG ODLG CENTERED
			
			DBGOTOP()
		ELSE
			LEXEC := .T.
		ENDIF

		IF LEXEC
			PROCESSA({|LEND|MONTAREL()})
		ENDIF
		RETINDEX("SE1")
		FERASE(CINDEXNAME+ORDBAGEXT())

	RETURN

/*/{PROTHEUS.DOC} MONTAREL
	FUNÇÃO PARA BUSCAR OS DADOS PARA O BOLETO
	@TYPE FUNCTION
	@VERSION  12.1.25
	@AUTHOR JONAS MACHADO
	@SINCE 14/06/2021
/*/
STATIC FUNCTION MONTAREL()
		
		LOCAL OPRINT
		LOCAL NX		:= 0
		LOCAL CNRODOC 	:= " "
		LOCAL ADADOSEMP    := {	SM0->M0_NOMECOM                                     			      ,; //[1]NOME DA EMPRESA
							SM0->M0_ENDCOB                                     						  ,; //[2]ENDEREÇO
							ALLTRIM(SM0->M0_BAIRCOB)+", "+ALLTRIM(SM0->M0_CIDCOB)+", "+SM0->M0_ESTCOB ,; //[3]COMPLEMENTO
							"CEP: "+SUBS(SM0->M0_CEPCOB,1,5)+"-"+SUBS(SM0->M0_CEPCOB,6,3)             ,; //[4]CEP
							"PABX/FAX: "+SM0->M0_TEL                                                  ,; //[5]TELEFONES
							"CNPJ: "+SUBS(SM0->M0_CGC,1,2)+"."+SUBS(SM0->M0_CGC,3,3)+"."+          	   ; //[6]
							SUBS(SM0->M0_CGC,6,3)+"/"+SUBS(SM0->M0_CGC,9,4)+"-"+                       ; //[6]
							SUBS(SM0->M0_CGC,13,2)                                                    ,; //[6]CGC
							"I.E.: "+SUBS(SM0->M0_INSC,1,3)+"."+SUBS(SM0->M0_INSC,4,3)+"."+            ; //[7]
							SUBS(SM0->M0_INSC,7,3)+"."+SUBS(SM0->M0_INSC,10,3)                        }  //[7]I.E
		LOCAL ADADOSTIT   	:= {}
		LOCAL ADADOSBANCO 	:= {}
		LOCAL ADATSACADO  	:= {}
		LOCAL ABOLTEXT    	:= {"APÓS O VENCIMENTO COBRAR JUROS DE R$", "PROTESTAR APÓS 3 DIAS DE ATRASO. ","AO DIA"}
		LOCAL NI          	:= 1
		LOCAL ACB_RN_NN   	:= {}
		LOCAL NVLRABAT	  	:= 0
		PRIVATE CSTARTPATH  := GETSRVPROFSTRING("STARTPATH","")


		OPRINT:= TMSPRINTER():NEW( "BOLETO LASER" )
		OPRINT:SETPORTRAIT() // OU SETLANDSCAPE()
		OPRINT:SETUP()   // INICIA UMA NOVA PÁGINA

			DBSELECTAREA("SE1")
			//SE1->(DBGOTOP())
			PROCREGUA(RECCOUNT())
			DO WHILE SE1->(!EOF())


				IF  SE1->E1_PORTADO == "CX1"         
					SE1->(DBSKIP())
					LOOP
				ELSE
				DBSELECTAREA("SC5")
				SC5->(DBSETORDER(1))
					IF SC5->(DBSEEK(XFILIAL("SC5") + SE1->E1_PEDIDO))
						IF  SC5->C5_BANCO == "CX1"
							SE1->(DBSKIP())
							LOOP
						ENDIF
					ENDIF

					DBSELECTAREA("SF2")
					SF2->(DBSETORDER(1))
					IF SF2->(DBSEEK(XFILIAL("SF2") + SE1->(E1_NUM + E1_SERIE + E1_CLIENTE + E1_LOJA)))
						CCONDPAG := SF2->F2_COND
						DBSELECTAREA("SE4")
						SE4->(DBSETORDER(1))
						//DBSEEK(XFILIAL("SA6")+MV_PAR19+MV_PAR20+MV_PAR21)
						IF SE4->(DBSEEK(XFILIAL("SE4") + CCONDPAG))
							IF (SE4->E4_TIPO == "1") .OR. (SE4->E4_TIPO == "5")
								APAGAMENTOS := STRTOKARR(SE4->E4_COND, ",")
								IF (VAL(APAGAMENTOS[1]) == 0) .AND. (VAL(SE1->E1_PARCELA) <= 1)
									SE1->(DBSKIP())
								LOOP
								ENDIF
								ELSEIF (SE4->E4_TIPO == "8")
									APAGAMENTOS := STRTOKARR(STRTRAN(STRTRAN(SE4->E4_COND, "["), "]"), ",")
									IF (VAL(APAGAMENTOS[1]) == 0) .AND. (VAL(SE1->E1_PARCELA) <= 1)
										SE1->(DBSKIP())
									LOOP
								ENDIF
							ENDIF
						ENDIF 
					ENDIF
				ENDIF

				IF MARKED("E1_OK")
					IF EMPTY(MV_PAR19)
					//POSICIONA O SA6 (BANCOS)
					DBSELECTAREA("SA6")
					DBSETORDER(1)                                    
					//DBSEEK(XFILIAL("SA6")+MV_PAR19+MV_PAR20+MV_PAR21)
						IF DBSEEK(XFILIAL("SA6")+SE1->(E1_PORTADO+E1_AGEDEP+E1_CONTA)) == .F.
						SHOWHELPDLG(SM0->M0_NOME,;
							{"BANCO/AGÊNCIA/CONTA INVÁLIDO."},5,;
							{"VERIFIQUE SE OS PARÂMETROS ESTÃO PREENCHIDOS CORRETAMENTE."},5)
						RETURN
					ENDIF

					//POSICIONA NA ARQ DE PARAMETROS CNAB
					DBSELECTAREA("SEE")
					DBSETORDER(1)
					//DBSEEK(XFILIAL("SEE")+MV_PAR19+MV_PAR20+MV_PAR21)
					IF DBSEEK(XFILIAL("SEE")+SE1->(E1_PORTADO+E1_AGEDEP+E1_CONTA)) == .F.
						SHOWHELPDLG(SM0->M0_NOME,;
							{"PARÂMETROS DE BANCO DO BANCO/AGÊNCIA/CONTA/SUB-CONTA INVÁLIDO."},5,;
							{"VERIFIQUE SE OS PARÂMETROS ESTÃO PREENCHIDOS CORRETAMENTE."},5)
						RETURN
					ENDIF
				ELSE
					//POSICIONA O SA6 (BANCOS)
					DBSELECTAREA("SA6")
					DBSETORDER(1)
					IF DBSEEK(XFILIAL("SA6")+MV_PAR19+MV_PAR20+MV_PAR21) == .F.
						SHOWHELPDLG(SM0->M0_NOME,;
							{"BANCO/AGÊNCIA/CONTA INVÁLIDO."},5,;
							{"VERIFIQUE SE OS PARÂMETROS ESTÃO PREENCHIDOS CORRETAMENTE."},5)
						RETURN
					ENDIF			

					//POSICIONA NA ARQ DE PARAMETROS CNAB
					DBSELECTAREA("SEE")
					DBSETORDER(1)
					IF DBSEEK(XFILIAL("SEE")+MV_PAR19+MV_PAR20+MV_PAR21) == .F.
						SHOWHELPDLG(SM0->M0_NOME,;
							{"PARÂMETROS DE BANCO DO BANCO/AGÊNCIA/CONTA/SUB-CONTA INVÁLIDO."},5,;
							{"VERIFIQUE SE OS PARÂMETROS ESTÃO PREENCHIDOS CORRETAMENTE."},5)
						RETURN
					ENDIF
				ENDIF

			//POSICIONA NO PEDIDO
			DBSELECTAREA("SC5")
			DBSETORDER(1)
			DBSEEK(XFILIAL("SC5")+SE1->E1_PEDIDO,.T.)
			
			IF !EMPTY(SC5->C5_CLIENTE+SC5->C5_LOJACLI).AND.(SC5->C5_FILIAL+SC5->C5_NUM==SE1->E1_FILIAL+SE1->E1_PEDIDO)        
				DBSELECTAREA("SA1")
				DBSETORDER(1)
				DBSEEK(XFILIAL("SA1")+SC5->C5_CLIENTE+SC5->C5_LOJACLI,.T.)
			ELSE
				//POSICIONA O SA1 (CLIENTE)
				DBSELECTAREA("SA1")
				DBSETORDER(1)
				DBSEEK(XFILIAL("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA,.T.)
			ENDIF                          
			
			// EFETUA O PREENCHIMENTO DO CAMPO E1_NUMBCO COM
			//O NUMERO SEQUENCIAL DA TABELA E1_FAIXATU.         
			//DBSELECTAREA("SE1")
			//IF EMPTY(SE1->E1_NUMBCO)
			//NOSSONUM()
			//ENDIF
			
			AADD(ADADOSBANCO, ALLTRIM(SA6->A6_COD))     // [1]NUMERO DO BANCO
			AADD(ADADOSBANCO, ALLTRIM(SA6->A6_NOME))    // [2]NOME DO BANCO
			AADD(ADADOSBANCO, ALLTRIM(SA6->A6_AGENCIA)) // [3]AGÊNCIA
			AADD(ADADOSBANCO, ALLTRIM(SA6->A6_NUMCON))  // [4]CONTA CORRENTE
			AADD(ADADOSBANCO, ALLTRIM(SA6->A6_DVCTA))   // [5]DÍGITO DA CONTA CORRENTE
			AADD(ADADOSBANCO, ALLTRIM(__CCARTEIRA))     // [6]CODIGO DA CARTEIRA
			
			IF EMPTY(SA1->A1_ENDCOB)
				ADATSACADO   := {ALLTRIM(SA1->A1_NOME)              ,;     	// [1]RAZÃO SOCIAL
				ALLTRIM(SA1->A1_COD )+"-"+SA1->A1_LOJA              ,;     	// [2]CÓDIGO
				ALLTRIM(SA1->A1_END )+"-"+ALLTRIM(SA1->A1_BAIRRO)   ,;     	// [3]ENDEREÇO
				ALLTRIM(SA1->A1_MUN )                               ,;  	// [4]CIDADE
				SA1->A1_EST                                         ,;    	// [5]ESTADO
				SA1->A1_CEP                                         ,;     	// [6]CEP
				SA1->A1_CGC										    ,;      // [7]CGC
				SA1->A1_PESSOA									     }      // [8]PESSOA
			ELSE
				ADATSACADO   := {ALLTRIM(SA1->A1_NOME)            	,;   	// [1]RAZÃO SOCIAL
				ALLTRIM(SA1->A1_COD )+"-"+SA1->A1_LOJA              ,;   	// [2]CÓDIGO
				ALLTRIM(SA1->A1_ENDCOB)+"-"+ALLTRIM(SA1->A1_BAIRROC),;   	// [3]ENDEREÇO
				ALLTRIM(SA1->A1_MUNC)	                            ,;   	// [4]CIDADE
				SA1->A1_ESTC	                                    ,;   	// [5]ESTADO
				SA1->A1_CEPC                                        ,;   	// [6]CEP
				SA1->A1_CGC											,;		// [7]CGC
				SA1->A1_PESSOA										 }		// [8]PESSOA
			ENDIF
			
			//NVLRABAT   :=  SOMAABAT(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,"R",1,,SE1->E1_CLIENTE,SE1->E1_LOJA)
			
			/*
			--------------------------------------------------------------
			PARTE DO NOSSO NUMERO. SAO 8 DIGITOS PARA IDENTIFICAR O TITULO
			--------------------------------------------------------------
			*/
			CNRODOC	:= STRZERO(VAL(ALLTRIM(SE1->E1_NUM)+ALLTRIM(SE1->E1_PARCELA)),8)

			DBSELECTAREA("SE1")
			RECLOCK("SE1",.F.)
				SE1->E1_NUMBCO 	:=	CNRODOC   // NOSSO NÚMERO (VER FÓRMULA PARA CALCULO) 
				SE1->E1_PORTADO :=	ADADOSBANCO[1]
				SE1->E1_AGEDEP  :=	ADADOSBANCO[3]
				SE1->E1_CONTA   :=	ADADOSBANCO[4]
			MSUNLOCK()
			
			/*
			----------------------
			MONTA CODIGO DE BARRAS
			----------------------
			*/                  
			//MOSTRA = STR(NVLRABAT,12,2)
			//MSGBOX(MOSTRA)
			
			ACB_RN_NN := FLINHADIG(ADADOSBANCO[1]      ,; // NUMERO DO BANCO
			__CMOEDA            ,; // CODIGO DA MOEDA
			ADADOSBANCO[6]      ,; // CODIGO DA CARTEIRA
			ADADOSBANCO[3]      ,; // CODIGO DA AGENCIA
			ADADOSBANCO[4]      ,; // CODIGO DA CONTA
			ADADOSBANCO[5]      ,; // DV DA CONTA
			(E1_VALOR-NVLRABAT) ,; // VALOR DO TITULO		
			E1_VENCTO           ,; // DATA DE VENCIMENTO DO TITULO
			CNRODOC              ) // NUMERO DO DOCUMENTO NO CONTAS A RECEBER
				
			DVNN := ALLTRIM(STR(MODULO10(ADADOSBANCO[3]+ADADOSBANCO[4]+ADADOSBANCO[6]+CNRODOC)))		

			IF EMPTY(E1_PARCELA)
				CNUMTIT := ALLTRIM(E1_NUM)
			ELSE                     
				CNUMTIT := ALLTRIM(E1_NUM)+"-"+ALLTRIM(E1_PARCELA)
			ENDIF
			
		// MSGBOX(STR(NVLRABAT))  

			ADADOSTIT	:= {CNUMTIT				,;  // [1] NÚMERO DO TÍTULO
			E1_EMISSAO                          ,;  // [2] DATA DA EMISSÃO DO TÍTULO
			DDATABASE                    		,;  // [3] DATA DA EMISSÃO DO BOLETO
			E1_VENCTO                           ,;  // [4] DATA DO VENCIMENTO
			(E1_SALDO - NVLRABAT)               ,;  // [5] VALOR DO TÍTULO
			ACB_RN_NN[3]                        ,;  // [6] NOSSO NÚMERO (VER FÓRMULA PARA CALCULO)
			E1_PREFIXO                          ,;  // [7] PREFIXO DA NF
			E1_TIPO	                           	}   // [8] TIPO DO TITULO
			
			IMPRESS(OPRINT,ADADOSEMP,ADADOSTIT,ADADOSBANCO,ADATSACADO,ABOLTEXT,ACB_RN_NN,DVNN)
			NX := NX + 1
		ENDIF

		DBSELECTAREA("SE1")
			SE1->(DBSKIP())
		INCPROC()
			NI++
	ENDDO
	//OPRINT:ENDPAGE()     // FINALIZA A PÁGINA
	//OPRINT:PREVIEW()     // VISUALIZA ANTES DE IMPRIMIR
	//CJPEG := IIF(EMPTY(ALLTRIM(SE1->E1_NUM)),CRIATRAB(,.F.),ALLTRIM(SE1->E1_NUM))
	//OPRINT:SAVEALLASJPEG(CSTARTPATH+CJPEG,1000,1400,140)
RETURN NIL

/*/{Protheus.doc} IMPRESS
	IMPRESSÃO DOS DADOS DO BOLETO EM MODO GRÁFICO 
	@type function
	@version 12.1.25 
	@author JONAS MACHADO
	@since 14/06/2021
/*/
STATIC FUNCTION IMPRESS(OPRINT,ADADOSEMP,ADADOSTIT,ADADOSBANCO,ADATSACADO,ABOLTEXT,ACB_RN_NN,DVNN)
	
	LOCAL OFONT6
	LOCAL OFONT7
	LOCAL OFONT8
	LOCAL OFONT9
	LOCAL OFONT11C
	LOCAL OFONT10
	LOCAL OFONT14
	LOCAL OFONT16N
	LOCAL OFONT15
	LOCAL OFONT14N
	LOCAL OFONT24
	LOCAL NI := 0

	//PARAMETROS DE TFONT.NEW()
	//1.NOME DA FONTE (WINDOWS)
	//3.TAMANHO EM PIXELS
	//5.BOLD (T/F)
	OFONT6   := TFONT():NEW("ARIAL",9,6,.T.,.F.,5,.T.,5,.T.,.F.)
	OFONT7   := TFONT():NEW("ARIAL",9,7,.T.,.F.,5,.T.,5,.T.,.F.)
	OFONT8   := TFONT():NEW("ARIAL",9,8,.T.,.F.,5,.T.,5,.T.,.F.)
	OFONT9   := TFONT():NEW("ARIAL",9,9,.T.,.F.,5,.T.,5,.T.,.F.)
	OFONT11C := TFONT():NEW("COURIER NEW",9,11,.T.,.T.,5,.T.,5,.T.,.F.)
	OFONT11  := TFONT():NEW("ARIAL",9,11,.T.,.T.,5,.T.,5,.T.,.F.)
	OFONT9   := TFONT():NEW("ARIAL",9,8,.T.,.T.,5,.T.,5,.T.,.F.)
	OFONT10  := TFONT():NEW("ARIAL",9,10,.T.,.T.,5,.T.,5,.T.,.F.)
	OFONT14  := TFONT():NEW("ARIAL",9,14,.T.,.T.,5,.T.,5,.T.,.F.)
	OFONT20  := TFONT():NEW("ARIAL",9,20,.T.,.T.,5,.T.,5,.T.,.F.)
	OFONT21  := TFONT():NEW("ARIAL",9,21,.T.,.T.,5,.T.,5,.T.,.F.)
	OFONT16N := TFONT():NEW("ARIAL",9,16,.T.,.F.,5,.T.,5,.T.,.F.)
	OFONT15  := TFONT():NEW("ARIAL",9,15,.T.,.T.,5,.T.,5,.T.,.F.)
	OFONT15N := TFONT():NEW("ARIAL",9,14,.T.,.F.,5,.T.,5,.T.,.F.)
	OFONT14N := TFONT():NEW("ARIAL",9,14,.T.,.F.,5,.T.,5,.T.,.F.)
	OFONT24  := TFONT():NEW("ARIAL",9,24,.T.,.T.,5,.T.,5,.T.,.F.)

	OPRINT:STARTPAGE()   // INICIA UMA NOVA PÁGINA

	/******************/
	/* PRIMEIRA PARTE */
	/******************/

	NROW1 := 0

	OPRINT:LINE (NROW1+0150,500,NROW1+0070, 500)
	OPRINT:LINE (NROW1+0150,710,NROW1+0070, 710)

	OPRINT:SAY  (NROW1+0084,100,ADADOSBANCO[2],OFONT10 )	        // [2]NOME DO BANCO
	OPRINT:SAY  (NROW1+0075,513,ADADOSBANCO[1]+"-7",OFONT20 )		// [1]NUMERO DO BANCO

	OPRINT:SAY  (NROW1+0084,1900,"COMPROVANTE DE ENTREGA",OFONT10)
	OPRINT:LINE (NROW1+0150,100,NROW1+0150,2300)

	OPRINT:SAY  (NROW1+0150,100 ,"BENEFICIÁRIO",OFONT8)
	OPRINT:SAY  (NROW1+0200,100 ,ADADOSEMP[1],OFONT10)				//NOME + CNPJ

	OPRINT:SAY  (NROW1+0150,1060,"AGÊNCIA/CÓDIGO BENEFICIÁRIO",OFONT8)
	OPRINT:SAY  (NROW1+0200,1060,ADADOSBANCO[3]+"/"+ADADOSBANCO[4]+"-"+ADADOSBANCO[5],OFONT10)

	OPRINT:SAY  (NROW1+0150,1510,"NRO.DOCUMENTO",OFONT8)
	//OPRINT:SAY  (NROW1+0200,1510,ADADOSTIT[7]+ADADOSTIT[1],OFONT10) //PREFIXO +NUMERO+PARCELA
	OPRINT:SAY (NROW1+0200,1510,ADADOSTIT[1]						,OFONT10) //NUMERO DO TITULO

	OPRINT:SAY  (NROW1+0250,100 ,"PAGADOR",OFONT8)
	OPRINT:SAY  (NROW1+0300,100 ,ADATSACADO[1],OFONT9)				//NOME

	OPRINT:SAY  (NROW1+0250,1060,"VENCIMENTO",OFONT8)
	OPRINT:SAY  (NROW1+0300,1080,STRZERO(DAY(ADADOSTIT[4]),2) +"/"+ STRZERO(MONTH(ADADOSTIT[4]),2) +"/"+ RIGHT(STR(YEAR(ADADOSTIT[4])),4),OFONT10)

	OPRINT:SAY  (NROW1+0250,1510,"VALOR DO DOCUMENTO",OFONT8)
	OPRINT:SAY  (NROW1+0300,1550,ALLTRIM(TRANSFORM(ADADOSTIT[5],"@E 999,999,999.99")),OFONT10)

	OPRINT:SAY  (NROW1+0400,0100,"RECEBI(EMOS) O BLOQUETO/TÍTULO"					,OFONT10)
	OPRINT:SAY  (NROW1+0450,0100,"COM AS CARACTERÍSTICAS ACIMA."					,OFONT10)
	OPRINT:SAY  (NROW1+0350,1060,"DATA"												,OFONT8)
	OPRINT:SAY  (NROW1+0350,1410,"ASSINATURA"										,OFONT8)
	OPRINT:SAY  (NROW1+0450,1060,"DATA"												,OFONT8)
	OPRINT:SAY  (NROW1+0450,1410,"ENTREGADOR"										,OFONT8)

	OPRINT:LINE (NROW1+0250, 100,NROW1+0250,1900 )
	OPRINT:LINE (NROW1+0350, 100,NROW1+0350,1900 )
	OPRINT:LINE (NROW1+0450,1050,NROW1+0450,1900 ) //---
	OPRINT:LINE (NROW1+0550, 100,NROW1+0550,2300 )

	OPRINT:LINE (NROW1+0550,1050,NROW1+0150,1050 )
	OPRINT:LINE (NROW1+0550,1400,NROW1+0350,1400 )
	OPRINT:LINE (NROW1+0350,1500,NROW1+0150,1500 ) //--
	OPRINT:LINE (NROW1+0550,1900,NROW1+0150,1900 )

	OPRINT:SAY  (NROW1+0165,1910,"(  )MUDOU-SE"                                		,OFONT8)
	OPRINT:SAY  (NROW1+0205,1910,"(  )AUSENTE"                                    	,OFONT8)
	OPRINT:SAY  (NROW1+0245,1910,"(  )NÃO EXISTE Nº INDICADO"                  		,OFONT8)
	OPRINT:SAY  (NROW1+0285,1910,"(  )RECUSADO"                                		,OFONT8)
	OPRINT:SAY  (NROW1+0325,1910,"(  )NÃO PROCURADO"                              	,OFONT8)
	OPRINT:SAY  (NROW1+0365,1910,"(  )ENDEREÇO INSUFICIENTE"                  		,OFONT8)
	OPRINT:SAY  (NROW1+0405,1910,"(  )DESCONHECIDO"                            		,OFONT8)
	OPRINT:SAY  (NROW1+0445,1910,"(  )FALECIDO"                                   	,OFONT8)
	OPRINT:SAY  (NROW1+0485,1910,"(  )OUTROS(ANOTAR NO VERSO)"                  	,OFONT8)

	/*****************/
	/* SEGUNDA PARTE */
	/*****************/

	NROW2 := 0

	//PONTILHADO SEPARADOR
	/*
	FOR NI := 100 TO 2300 STEP 50
	OPRINT:LINE(NROW2+0580, NI,NROW2+0580, NI+30)
	NEXT NI
	*/
	OPRINT:LINE (NROW2+0710,100,NROW2+0710,2300)
	OPRINT:LINE (NROW2+0710,500,NROW2+0630, 500)
	OPRINT:LINE (NROW2+0710,710,NROW2+0630, 710)

	OPRINT:SAY  (NROW2+0644,100,ADADOSBANCO[2],OFONT10 )		// [2]NOME DO BANCO
	OPRINT:SAY  (NROW2+0635,513,ADADOSBANCO[1]+"-7",OFONT20 )	// [1]NUMERO DO BANCO
	OPRINT:SAY  (NROW2+0644,1800,"RECIBO DO PAGADOR",OFONT10)

	OPRINT:LINE (NROW2+0810,100,NROW2+0810,2300 )
	OPRINT:LINE (NROW2+0910,100,NROW2+0910,2300 )
	OPRINT:LINE (NROW2+0980,100,NROW2+0980,2300 )
	OPRINT:LINE (NROW2+1050,100,NROW2+1050,2300 )

	OPRINT:LINE (NROW2+0910,500,NROW2+1050,500)
	OPRINT:LINE (NROW2+0980,750,NROW2+1050,750)
	OPRINT:LINE (NROW2+0910,1000,NROW2+1050,1000)
	OPRINT:LINE (NROW2+0910,1300,NROW2+0980,1300)
	OPRINT:LINE (NROW2+0910,1480,NROW2+1050,1480)

	OPRINT:SAY  (NROW2+0710,100 ,"LOCAL DE PAGAMENTO",OFONT8)
	//OPRINT:SAY  (NROW2+0725,400 ,"ATE O VENCIMENTO PAGUE PREFERENCIALMENTE NO ITAU",OFONT10)
	OPRINT:SAY  (NROW2+0765,100 ,"APÓS O VENCIMENTO PAGUE SOMENTE NO ITAU",OFONT10)

	OPRINT:SAY  (NROW2+0710,1810,"VENCIMENTO"                                     ,OFONT8)
	CSTRING	:= STRZERO(DAY(ADADOSTIT[4]),2) +"/"+ STRZERO(MONTH(ADADOSTIT[4]),2) +"/"+ RIGHT(STR(YEAR(ADADOSTIT[4])),4)
	NCOL := 1810+(374-(LEN(CSTRING)*22))
	OPRINT:SAY  (NROW2+0750,NCOL,CSTRING,OFONT11C)

	OPRINT:SAY  (NROW2+0810,100 ,"BENEFICIÁRIO"                                        ,OFONT8)
	OPRINT:SAY  (NROW2+0850,100 ,ADADOSEMP[1]+"                  - "+ADADOSEMP[6]	,OFONT10) //NOME + CNPJ

	OPRINT:SAY  (NROW2+0810,1810,"AGÊNCIA/CÓDIGO BENEFICIÁRIO",OFONT8)
	CSTRING := ALLTRIM(ADADOSBANCO[3]+"/"+ADADOSBANCO[4]+"-"+ADADOSBANCO[5])
	NCOL := 1810+(374-(LEN(CSTRING)*22))
	OPRINT:SAY  (NROW2+0850,NCOL,CSTRING,OFONT11C)

	OPRINT:SAY  (NROW2+0910,100 ,"DATA DO DOCUMENTO"                              ,OFONT8)
	OPRINT:SAY  (NROW2+0940,100, STRZERO(DAY(DDATABASE),2) +"/"+ STRZERO(MONTH(DDATABASE),2) +"/"+ RIGHT(STR(YEAR(DDATABASE)),4),OFONT10)
	//OPRINT:SAY  (NROW2+0940,100, STRZERO(DAY(ADADOSTIT[2]),2) +"/"+ STRZERO(MONTH(ADADOSTIT[2]),2) +"/"+ RIGHT(STR(YEAR(ADADOSTIT[2])),4),OFONT10)

	OPRINT:SAY  (NROW2+0910,505 ,"NRO.DOCUMENTO"                                  ,OFONT8)
	//OPRINT:SAY  (NROW2+0940,605 ,ADADOSTIT[7]+ADADOSTIT[1]						,OFONT10) //PREFIXO +NUMERO+PARCELA
	OPRINT:SAY (NROW2+0940,605 ,ADADOSTIT[1]						,OFONT10) //NUMERO DO TITULO

	OPRINT:SAY  (NROW2+0910,1005,"ESPÉCIE DOC."                                   ,OFONT8)
	OPRINT:SAY  (NROW2+0940,1050,ADADOSTIT[8]										,OFONT10) //TIPO DO TITULO

	OPRINT:SAY  (NROW2+0910,1305,"ACEITE"                                         ,OFONT8)
	OPRINT:SAY  (NROW2+0940,1400,"N"                                             ,OFONT10)

	OPRINT:SAY  (NROW2+0910,1485,"DATA DO PROCESSAMENTO"                          ,OFONT8)
	OPRINT:SAY  (NROW2+0940,1550,STRZERO(DAY(ADADOSTIT[3]),2) +"/"+ STRZERO(MONTH(ADADOSTIT[3]),2) +"/"+ RIGHT(STR(YEAR(ADADOSTIT[3])),4),OFONT10) // DATA IMPRESSAO

	OPRINT:SAY  (NROW2+0910,1810,"NOSSO NÚMERO"                                   ,OFONT8)
	CSTRING := ALLTRIM(SUBSTR(ADADOSTIT[6],1,3)+"/"+RIGHT(ALLTRIM(SE1->E1_NUMBCO),8)+"-"+DVNN)   //SUBSTR(ADADOSTIT[6],4)
	NCOL := 1810+(374-(LEN(CSTRING)*22))
	OPRINT:SAY  (NROW2+0940,NCOL,CSTRING,OFONT11C)

	OPRINT:SAY  (NROW2+0980,100 ,"USO DO BANCO"                                   ,OFONT8)

	OPRINT:SAY  (NROW2+0980,505 ,"CARTEIRA"                                       ,OFONT8)
	OPRINT:SAY  (NROW2+1010,555 ,ADADOSBANCO[6]                                  	,OFONT10)

	OPRINT:SAY  (NROW2+0980,755 ,"ESPÉCIE"                                        ,OFONT8)
	OPRINT:SAY  (NROW2+1010,805 ,"R$"                                             ,OFONT10)

	OPRINT:SAY  (NROW2+0980,1005,"QUANTIDADE"                                     ,OFONT8)
	OPRINT:SAY  (NROW2+0980,1485,"VALOR"                                          ,OFONT8)

	OPRINT:SAY  (NROW2+0980,1810,"VALOR DO DOCUMENTO"                          	,OFONT8)
	CSTRING := ALLTRIM(TRANSFORM(ADADOSTIT[5],"@E 99,999,999.99"))
	NCOL := 1810+(374-(LEN(CSTRING)*22))
	OPRINT:SAY  (NROW2+1010,NCOL,CSTRING ,OFONT11C)

	OPRINT:SAY  (NROW2+1050,100 ,"INSTRUÇÕES (TODAS INFORMAÇÕES DESTE BLOQUETO SÃO DE EXCLUSIVA RESPONSABILIDADE DO BENEFICIÁRIO)",OFONT8)
	OPRINT:SAY  (NROW2+1150,100 ,ABOLTEXT[1]+" "+ALLTRIM(TRANSFORM(((ADADOSTIT[5]*0.09)/30),"@E 99,999.99"))+" AO DIA"       ,OFONT10)
	//OPRINT:SAY  (NROW2+1150,100 ,ABOLTEXT[1],OFONT10)+" "+ALLTRIM(TRANSFORM(((ADADOSTIT[5]*(10/30))/100),"@E 99,999.99"))+" AO DIA"  ,OFONT10)
	OPRINT:SAY  (NROW2+1200,100 ,ABOLTEXT[2]   ,OFONT10)
	//OPRINT:SAY  (NROW2+1250,100 ,ABOLTEXT[3]                                        ,OFONT10)

	OPRINT:SAY  (NROW2+1250,100,"INSTRUÇÕES DE RESPONSABILIDADE DO BENEFICIÁRIO. QUALQUER"                        ,OFONT10)
	OPRINT:SAY  (NROW2+1300,100,"DÚVIDA SOBRE ESTE BOLETO, CONTATE O BENEFICIÁRIO."                               ,OFONT10)

	OPRINT:SAY  (NROW2+1050,1810,"(-)DESCONTO/ABATIMENTO"                         ,OFONT8)
	OPRINT:SAY  (NROW2+1120,1810,"(-)OUTRAS DEDUÇÕES"                             ,OFONT8)
	OPRINT:SAY  (NROW2+1190,1810,"(+)MORA/MULTA"                                  ,OFONT8)
	OPRINT:SAY  (NROW2+1260,1810,"(+)OUTROS ACRÉSCIMOS"                           ,OFONT8)
	OPRINT:SAY  (NROW2+1330,1810,"(=)VALOR COBRADO"                               ,OFONT8)
					

	//TEMP
	//OPRINT:SAY  (NROW2+1350,100,"APOS VCTO ACESSE WWW.ITAU.COM.BR/BOLETOS PARA ATUALIZAR SEU BOLETO"                               ,OFONT10)


	OPRINT:SAY  (NROW2+1400,100 ,"PAGADOR"                                         ,OFONT8)
	OPRINT:SAY  (NROW2+1430,400 ,ADATSACADO[1]+" ("+ADATSACADO[2]+")"             ,OFONT10)
	OPRINT:SAY  (NROW2+1483,400 ,ADATSACADO[3]                                    ,OFONT10)
	OPRINT:SAY  (NROW2+1536,400 ,ADATSACADO[6]+"    "+ADATSACADO[4]+" - "+ADATSACADO[5],OFONT10) // CEP+CIDADE+ESTADO

	IF ADATSACADO[8] = "J"
		OPRINT:SAY  (NROW2+1430,1750 ,"CNPJ: "+TRANSFORM(ADATSACADO[7],"@R 99.999.999/9999-99"),OFONT10) // CGC
	ELSE
		OPRINT:SAY  (NROW2+1430,1750 ,"CPF: "+TRANSFORM(ADATSACADO[7],"@R 999.999.999-99"),OFONT10) 	// CPF
	ENDIF

	OPRINT:SAY  (NROW2+1589,1850,SUBSTR(ADADOSTIT[6],1,3)+SUBSTR(ADADOSTIT[6],4)  ,OFONT10)

	OPRINT:SAY  (NROW2+1605,100 ,"SACADOR/AVALISTA",OFONT8)
	OPRINT:SAY  (NROW2+1645,1500,"AUTENTICAÇÃO MECÂNICA",OFONT8)

	OPRINT:LINE (NROW2+0710,1800,NROW2+1400,1800 )
	OPRINT:LINE (NROW2+1120,1800,NROW2+1120,2300 )
	OPRINT:LINE (NROW2+1190,1800,NROW2+1190,2300 )
	OPRINT:LINE (NROW2+1260,1800,NROW2+1260,2300 )
	OPRINT:LINE (NROW2+1330,1800,NROW2+1330,2300 )
	OPRINT:LINE (NROW2+1400,100 ,NROW2+1400,2300 )
	OPRINT:LINE (NROW2+1640,100 ,NROW2+1640,2300 )

	/******************/
	/* TERCEIRA PARTE */
	/******************/

	NROW3 := 0

	FOR NI := 100 TO 2300 STEP 50
		OPRINT:LINE(NROW3+1880, NI, NROW3+1880, NI+30)
	NEXT NI

	OPRINT:LINE (NROW3+2000,100,NROW3+2000,2300)
	OPRINT:LINE (NROW3+2000,500,NROW3+1920, 500)
	OPRINT:LINE (NROW3+2000,710,NROW3+1920, 710)

	OPRINT:SAY  (NROW3+1934,100,ADADOSBANCO[2],OFONT10)			// 	[2]NOME DO BANCO
	OPRINT:SAY  (NROW3+1925,513,ADADOSBANCO[1]+"-7",OFONT20 )	// 	[1]NUMERO DO BANCO
	OPRINT:SAY  (NROW3+1934,755,ACB_RN_NN[2],OFONT15N)			//	LINHA DIGITAVEL DO CODIGO DE BARRAS

	OPRINT:LINE (NROW3+2100,100,NROW3+2100,2300 )
	OPRINT:LINE (NROW3+2200,100,NROW3+2200,2300 )
	OPRINT:LINE (NROW3+2270,100,NROW3+2270,2300 )
	OPRINT:LINE (NROW3+2340,100,NROW3+2340,2300 )

	OPRINT:LINE (NROW3+2200,500 ,NROW3+2340,500 )
	OPRINT:LINE (NROW3+2270,750 ,NROW3+2340,750 )
	OPRINT:LINE (NROW3+2200,1000,NROW3+2340,1000)
	OPRINT:LINE (NROW3+2200,1300,NROW3+2270,1300)
	OPRINT:LINE (NROW3+2200,1480,NROW3+2340,1480)

	OPRINT:SAY  (NROW3+2000,100 ,"LOCAL DE PAGAMENTO",OFONT8)
	//OPRINT:SAY  (NROW3+2015,400 ,"ATE O VENCIMENTO PAGUE PREFERENCIALMENTE NO ITAU",OFONT10)
	OPRINT:SAY  (NROW3+2055,100 ,"APÓS O VENCIMENTO PAGUE SOMENTE NO ITAU",OFONT10)

	OPRINT:SAY  (NROW3+2000,1810,"VENCIMENTO",OFONT8)
	CSTRING := STRZERO(DAY(ADADOSTIT[4]),2) +"/"+ STRZERO(MONTH(ADADOSTIT[4]),2) +"/"+ RIGHT(STR(YEAR(ADADOSTIT[4])),4)
	NCOL	 	 := 1810+(374-(LEN(CSTRING)*22))
	OPRINT:SAY  (NROW3+2040,NCOL,CSTRING,OFONT11C)

	OPRINT:SAY  (NROW3+2100,100 ,"BENEFICIÁRIO",OFONT8)
	OPRINT:SAY  (NROW3+2140,100 ,ADADOSEMP[1]+"                  - "+ADADOSEMP[6]	,OFONT10) //NOME + CNPJ

	OPRINT:SAY  (NROW3+2100,1810,"AGÊNCIA/CÓDIGO BENEFICIÁRIO",OFONT8)
	CSTRING := ALLTRIM(ADADOSBANCO[3]+"/"+ADADOSBANCO[4]+"-"+ADADOSBANCO[5]) 
	NCOL 	 := 1810+(374-(LEN(CSTRING)*22))
	OPRINT:SAY  (NROW3+2140,NCOL,CSTRING ,OFONT11C)

	OPRINT:SAY (NROW3+2200,100 ,"DATA DO DOCUMENTO"                             ,OFONT8)
	OPRINT:SAY (NROW3+2230,100, STRZERO(DAY(DDATABASE),2) +"/"+ STRZERO(MONTH(DDATABASE),2) +"/"+ RIGHT(STR(YEAR(DDATABASE)),4), OFONT10)

	OPRINT:SAY (NROW3+2200,505 ,"NRO.DOCUMENTO"                                 ,OFONT8)
	//OPRINT:SAY (NROW3+2230,605 ,ADADOSTIT[7]+ADADOSTIT[1]						,OFONT10) //PREFIXO +NUMERO+PARCELA
	OPRINT:SAY (NROW3+2230,605 ,ADADOSTIT[1]						,OFONT10) //NUMERO DO TITULO

	OPRINT:SAY (NROW3+2200,1005,"ESPÉCIE DOC."                                  ,OFONT8)
	OPRINT:SAY (NROW3+2230,1050,ADADOSTIT[8]									,OFONT10) //TIPO DO TITULO

	OPRINT:SAY (NROW3+2200,1305,"ACEITE"                                        ,OFONT8)
	OPRINT:SAY (NROW3+2230,1400,"N"                                             ,OFONT10)

	OPRINT:SAY  (NROW3+2200,1485,"DATA DO PROCESSAMENTO"                        ,OFONT8)
	OPRINT:SAY  (NROW3+2230,1550,STRZERO(DAY(ADADOSTIT[3]),2) +"/"+ STRZERO(MONTH(ADADOSTIT[3]),2) +"/"+ RIGHT(STR(YEAR(ADADOSTIT[3])),4)                               ,OFONT10) // DATA IMPRESSAO


	OPRINT:SAY  (NROW3+2200,1810,"NOSSO NÚMERO"                                 ,OFONT8)
	CSTRING := ALLTRIM(SUBSTR(ADADOSTIT[6],1,3)+"/"+RIGHT(ALLTRIM(SE1->E1_NUMBCO),8)+"-"+DVNN)   //SUBSTR(ADADOSTIT[6],4)
	NCOL := 1810+(374-(LEN(CSTRING)*22))
	OPRINT:SAY  (NROW3+2230,NCOL,CSTRING,OFONT11C)


	OPRINT:SAY  (NROW3+2270,100 ,"USO DO BANCO"                                 ,OFONT8)

	OPRINT:SAY  (NROW3+2270,505 ,"CARTEIRA"                                     ,OFONT8)
	OPRINT:SAY  (NROW3+2300,555 ,ADADOSBANCO[6]                                 ,OFONT10)

	OPRINT:SAY  (NROW3+2270,755 ,"ESPÉCIE"                                      ,OFONT8)
	OPRINT:SAY  (NROW3+2300,805 ,"R$"                                           ,OFONT10)

	OPRINT:SAY  (NROW3+2270,1005,"QUANTIDADE"                                   ,OFONT8)
	OPRINT:SAY  (NROW3+2270,1485,"VALOR"                                        ,OFONT8)

	OPRINT:SAY  (NROW3+2270,1810,"VALOR DO DOCUMENTO"                          	,OFONT8)
	CSTRING := ALLTRIM(TRANSFORM(ADADOSTIT[5],"@E 99,999,999.99"))
	NCOL 	 := 1810+(374-(LEN(CSTRING)*22))
	OPRINT:SAY  (NROW3+2300,NCOL,CSTRING,OFONT11C)

	OPRINT:SAY  (NROW3+2340,100 ,"INSTRUÇÕES (TODAS INFORMAÇÕES DESTE BLOQUETO SÃO DE EXCLUSIVA RESPONSABILIDADE DO BENEFICIÁRIO)",OFONT8)
	OPRINT:SAY  (NROW3+2440,100 ,ABOLTEXT[1]+" "+ALLTRIM(TRANSFORM(((ADADOSTIT[5]*0.09)/30),"@E 99,999.99"))+" AO DIA"      ,OFONT10)
	//OPRINT:SAY  (NROW3+2490,100 ,ABOLTEXT[2]+" "+ALLTRIM(TRANSFORM(((ADADOSTIT[5]*0.01)/30),"@E 99,999.99"))  ,OFONT10)
	//OPRINT:SAY  (NROW3+2540,100 ,ABOLTEXT[3]                                    ,OFONT10)
	//OPRINT:SAY  (NROW3+2440,100 ,ABOLTEXT[1]+" "+ALLTRIM(TRANSFORM(((ADADOSTIT[5]*(10/30))/100),"@E 99,999.99"))+" AO DIA"  ,OFONT10)
	OPRINT:SAY  (NROW3+2490,100 ,ABOLTEXT[2]   ,OFONT10)
	OPRINT:SAY  (NROW3+2540,100,"INSTRUÇÕES DE RESPONSABILIDADE DO BENEFICIÁRIO. QUALQUER"                        ,OFONT10)
	OPRINT:SAY  (NROW3+2590,100,"DÚVIDA SOBRE ESTE BOLETO, CONTATE O BENEFICIÁRIO."                               ,OFONT10)


	OPRINT:SAY  (NROW3+2340,1810,"(-)DESCONTO/ABATIMENTO"                       ,OFONT8)
	OPRINT:SAY  (NROW3+2410,1810,"(-)OUTRAS DEDUÇÕES"                           ,OFONT8)
	OPRINT:SAY  (NROW3+2480,1810,"(+)MORA/MULTA"                                ,OFONT8)
	OPRINT:SAY  (NROW3+2550,1810,"(+)OUTROS ACRÉSCIMOS"                         ,OFONT8)
	OPRINT:SAY  (NROW3+2620,1810,"(=)VALOR COBRADO"                             ,OFONT8)

	// TEMP
	//OPRINT:SAY  (NROW2+2640,100,"APOS VCTO ACESSE WWW.ITAU.COM.BR/BOLETOS PARA ATUALIZAR SEU BOLETO"                               ,OFONT10)

	OPRINT:SAY  (NROW3+2690,100 ,"PAGADOR"                                       ,OFONT8)
	OPRINT:SAY  (NROW3+2700,400 ,ADATSACADO[1]+" ("+ADATSACADO[2]+")"           ,OFONT10)

	IF ADATSACADO[8] = "J"
		OPRINT:SAY  (NROW3+2700,1750,"CNPJ: "+TRANSFORM(ADATSACADO[7],"@R 99.999.999/9999-99"),OFONT10) // CGC
	ELSE
		OPRINT:SAY  (NROW3+2700,1750,"CPF: "+TRANSFORM(ADATSACADO[7],"@R 999.999.999-99"),OFONT10) 	// CPF
	ENDIF

	OPRINT:SAY  (NROW3+2753,400 ,ADATSACADO[3]                                  ,OFONT10)
	OPRINT:SAY  (NROW3+2806,400 ,ADATSACADO[6]+"    "+ADATSACADO[4]+" - "+ADATSACADO[5],OFONT10) // CEP+CIDADE+ESTADO
	OPRINT:SAY  (NROW3+2806,1750,SUBSTR(ADADOSTIT[6],1,3)+SUBSTR(ADADOSTIT[6],4)  ,OFONT10)

	OPRINT:SAY  (NROW3+2815,100 ,"SACADOR/AVALISTA"                             ,OFONT8)
	OPRINT:SAY  (NROW3+2855,1500,"AUTENTICAÇÃO MECÂNICA - FICHA DE COMPENSAÇÃO" ,OFONT8)

	OPRINT:LINE (NROW3+2000,1800,NROW3+2690,1800 )
	OPRINT:LINE (NROW3+2410,1800,NROW3+2410,2300 )
	OPRINT:LINE (NROW3+2480,1800,NROW3+2480,2300 )
	OPRINT:LINE (NROW3+2550,1800,NROW3+2550,2300 )
	OPRINT:LINE (NROW3+2620,1800,NROW3+2620,2300 )
	OPRINT:LINE (NROW3+2690,100 ,NROW3+2690,2300 )

	OPRINT:LINE (NROW3+2850,100,NROW3+2850,2300  )

	//MSBAR("INT25",25.5,1,ACB_RN_NN[1],OPRINT,.F.,NIL,NIL,0.025,1.5,NIL,NIL,"A",.F.) //MODALI
	MSBAR("INT25",24.5,1,ACB_RN_NN[1],OPRINT,.F.,NIL,NIL,0.022,1.5,NIL,NIL,"A",.F.) //DATASUPRI


	//DBSELECTAREA("SE1")
	//RECLOCK("SE1",.F.)
	//SE1->E1_NUMBCO 	:=	ACB_RN_NN[3]   // NOSSO NÚMERO (VER FÓRMULA PARA CALCULO)
	//MSUNLOCK()

	OPRINT:ENDPAGE() // FINALIZA A PÁGINA
RETURN NIL

/*/{Protheus.doc} FLINHADIG
	OBTENÇÃO DA LINHA DIGITÁVEL/CÓDIGO DE BARRAS 
	@type function
	@version 12.1.25
	@author JONAS MACHADO
	@since 14/06/2021
/*/
STATIC FUNCTION FLINHADIG (CCODBANCO, 	; // CODIGO DO BANCO (341)
	CCODMOEDA, 							; // CODIGO DA MOEDA (9)
	CCARTEIRA, 							; // CODIGO DA CARTEIRA
	CAGENCIA , 							; // CODIGO DA AGENCIA
	CCONTA   , 							; // CODIGO DA CONTA
	CDVCONTA , 							; // DIGITO VERIFICADOR DA CONTA
	NVALOR   , 							; // VALOR DO TITULO
	DVENCTO  , 							; // DATA DE VENCIMENTO DO TITULO
	CNRODOC   )							  // NUMERO DO DOCUMENTO REF AO CONTAS A RECEBER

	LOCAL CVALORFINAL   := STRZERO(INT(NVALOR*100),10)
	LOCAL CFATOR        := STRZERO(DVENCTO - CTOD("07/10/97"),4)
	LOCAL CCODBAR   	:= REPLICATE("0",43)
	LOCAL CCAMPO1   	:= REPLICATE("0",05)+"."+REPLICATE("0",05)
	LOCAL CCAMPO2   	:= REPLICATE("0",05)+"."+REPLICATE("0",06)
	LOCAL CCAMPO3   	:= REPLICATE("0",05)+"."+REPLICATE("0",06)
	LOCAL CCAMPO4   	:= REPLICATE("0",01)
	LOCAL CCAMPO5   	:= REPLICATE("0",14)
	LOCAL CTEMP     	:= ""
	LOCAL CNOSSONUM 	:= RIGHT(ALLTRIM(SE1->E1_NUMBCO),8) // NOSSO NUMERO
	LOCAL CDV			:= "" // DIGITO VERIFICADOR DOS CAMPOS
	LOCAL CLINDIG		:= ""
	/*
	-------------------------
	DEFINICAO DO NOSSO NUMERO
	-------------------------
	*/
	IF AT("-",CCONTA) > 0
		CDIG   := RIGHT(ALLTRIM(CCONTA),1)
		CCONTA := ALLTRIM(STR(VAL(LEFT(CCONTA,AT('-',CCONTA)-1) + CDIG)))
	ELSE
		CCONTA := VAL(CCONTA)
	ENDIF

	CCONTA 		 = STRZERO(CCONTA,5)
	CNOSSONUM   := ALLTRIM(CAGENCIA) + LEFT(ALLTRIM(CCONTA),5) + CCARTEIRA + RIGHT(ALLTRIM(SE1->E1_NUMBCO),8) //CNRODOC
	//CNOSSONUM   := ALLTRIM(CAGENCIA) + LEFT(ALLTRIM(CCONTA),5) + RIGHT(ALLTRIM(CCONTA),1) + CCARTEIRA + RIGHT(ALLTRIM(SE1->E1_NUMBCO),8) //CNRODOC
	CDVNN 		:= ALLTRIM(STR(MODULO10(CNOSSONUM)))
	CNOSSONUM   := CCARTEIRA + CNRODOC + CDVNN
	//CNOSSONUM   := CCARTEIRA + CNRODOC + '-' + CDVNN

	/*
	-----------------------------
	DEFINICAO DO CODIGO DE BARRAS
	-----------------------------
	*/
	
	CTEMP := ALLTRIM(CCODBANCO)   						+ ; // 01 A 03
	ALLTRIM(CCODMOEDA)            						+ ; // 04 A 04
	ALLTRIM(CFATOR)               						+ ; // 06 A 09
	ALLTRIM(CVALORFINAL)          						+ ; // 10 A 19
	ALLTRIM(CCARTEIRA)            						+ ; // 20 A 22
	RIGHT(ALLTRIM(SE1->E1_NUMBCO),8) 					+ ; // 23 A 30
	//ALLTRIM(CNRODOC)            						+ ; // 23 A 30
	ALLTRIM(CDVNN)                						+ ; // 31 A 31
	ALLTRIM(CAGENCIA)             						+ ; // 32 A 35
	ALLTRIM(LEFT(CCONTA,5))               				+ ; // 36 A 40
	ALLTRIM(CDVCONTA)             						+ ; // 41 A 41
	"000"                             						// 42 A 44
	CDVCB  := ALLTRIM(STR(MODULO11(CTEMP)))					// DIGITO VERIFICADOR CODBARRAS
	CCODBAR:= SUBSTR(CTEMP,1,4) + CDVCB + SUBSTR(CTEMP,5)   // + CDVNN + SUBSTR(CTEMP,31)

	/*
	-----------------------------------------------------
	DEFINICAO DA LINHA DIGITAVEL (REPRESENTACAO NUMERICA)
	-----------------------------------------------------
	CAMPO 1			CAMPO 2			CAMPO 3			CAMPO 4		CAMPO 5
	AAABC.CCDDX		DDDDD.DDFFFY	FGGGG.GGHHHZ	K			UUUUVVVVVVVVVV

	CAMPO 1:
	AAA = CODIGO DO BANCO NA CAMARA DE COMPENSACAO
	B = CODIGO DA MOEDA, SEMPRE 9
	CCC = CODIGO DA CARTEIRA DE COBRANCA
	DD = DOIS PRIMEIROS DIGITOS NO NOSSO NUMERO
	X = DAC QUE AMARRA O CAMPO, CALCULADO PELO MODULO 10 DA STRING DO CAMPO
	*/
	CTEMP   := CCODBANCO + CCODMOEDA + CCARTEIRA + SUBSTR(RIGHT(ALLTRIM(SE1->E1_NUMBCO),8),1,2)
	CDV		:= ALLTRIM(STR(MODULO10(CTEMP)))
	CCAMPO1 := SUBSTR(CTEMP,1,5) + '.' + ALLTRIM(SUBSTR(CTEMP,6)) + CDV + SPACE(2)
	/*
	CAMPO 2:
	DDDDDD = RESTANTE DO NOSSO NUMERO
	E = DAC DO CAMPO AGENCIA/CONTA/CARTEIRA/NOSSO NUMERO
	FFF = TRES PRIMEIROS NUMEROS QUE IDENTIFICAM A AGENCIA
	Y = DAC QUE AMARRA O CAMPO, CALCULADO PELO MODULO 10 DA STRING DO CAMPO
	*/
	CTEMP	:= SUBSTR(RIGHT(ALLTRIM(SE1->E1_NUMBCO),8),3) + CDVNN + SUBSTR(CAGENCIA,1,3)
	CDV		:= ALLTRIM(STR(MODULO10(CTEMP)))
	CCAMPO2 := SUBSTR(CTEMP,1,5) + '.' + SUBSTR(CTEMP,6) + CDV + SPACE(3) 
	/*
	CAMPO 3:
	F = RESTANTE DO NUMERO QUE IDENTIFICA A AGENCIA
	GGGGGG = NUMERO DA CONTA + DAC DA MESMA
	HHH = ZEROS (NAO UTILIZADO)
	Z = DAC QUE AMARRA O CAMPO, CALCULADO PELO MODULO 10 DA STRING DO CAMPO
	*/
	CTEMP   := SUBSTR(CAGENCIA,4,1) + STRZERO(VAL(CCONTA),5) + ALLTRIM(CDVCONTA) + "000"
	CDV		:= ALLTRIM(STR(MODULO10(CTEMP)))
	CCAMPO3 := SUBSTR(CTEMP,1,5) + '.' + SUBSTR(CTEMP,6) + CDV + SPACE(2)
	/*
	CAMPO 4:
	K = DAC DO CODIGO DE BARRAS
	*/
	CCAMPO4 := CDVCB + SPACE(2)
	/*
	CAMPO 5:
	UUUU = FATOR DE VENCIMENTO
	VVVVVVVVVV = VALOR DO TITULO
	*/
	CCAMPO5 := CFATOR + STRZERO(INT(NVALOR * 100),14 - LEN(CFATOR))
	CLINDIG := CCAMPO1 + CCAMPO2 + CCAMPO3 + CCAMPO4 + CCAMPO5

RETURN {CCODBAR, CLINDIG, CNOSSONUM}

/*/{Protheus.doc} MODULO10
	CÁLCULO DO MODULO 10 PARA OBTENÇÃO DO DV DOS CAMPOS DO CÓDIGO DE BARRAS
	@type function
	@version  12.1.25
	@author JONAS MACHADO
	@since 14/06/2021
	@param CDATA
/*/
STATIC FUNCTION MODULO10(CDATA)
	LOCAL  L,D,P := 0
	LOCAL B     := .F.
		L := LEN(CDATA)
		B := .T.
		D := 0
			WHILE L > 0
				P := VAL(SUBSTR(CDATA, L, 1))
				IF (B)
					P := P * 2
					IF P > 9
						P := P - 9
					END
				END
				D := D + P
				L := L - 1
				B := !B
			END
		D := 10 - (MOD(D,10))
				IF D = 10
					D := 0
				END
RETURN D

/*/{Protheus.doc} MODULO11
	CÁLCULO DO MÓDULO 11 PARA OBTENÇÃO DO DV DO CÓDIGO DE BARRAS
	@type function
	@version 12.1.25
	@author JONAS MACHADO
	@since 14/06/2021
	@param CDATA
	@return D
/*/
STATIC FUNCTION MODULO11(CDATA)
	LOCAL L, D, P := 0
			L := LEN(CDATA)
			D := 0
			P := 1
	// SOME O RESULTADO DE CADA PRODUTO EFETUADO E DETERMINE O TOTAL COMO (D);
	WHILE L > 0
		P := P + 1
		D := D + (VAL(SUBSTR(CDATA, L, 1)) * P)
		IF P = 9
			P := 1
		END
		L := L - 1
	END
	// DAC = 11 - MOD 11(D)
	D := 11 - (MOD(D,11))
	// OBS: SE O RESULTADO DESTA FOR IGUAL A 0, 1, 10 OU 11, CONSIDERE DAC = 1.
	IF (D == 0 .OR. D == 1 .OR. D == 10 .OR. D == 11)
		D := 1
	END
RETURN D
