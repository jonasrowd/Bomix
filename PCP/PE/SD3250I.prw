
#INCLUDE "APVT100.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "TRYEXCEPTION.CH"

#DEFINE CRLF chr(10) + chr(13)

/*/{Protheus.doc} SD3250I
	OBJETIVO NA FINALIZAÇÃO DE CADA APONTAMENTO DE PRODUÇÃO NÃO PERMITIR O CONSUMO INDEVIDO DE MATERIAIS COMO PALLET, RÓTULO, SACO, ETC
	CORRIGIR A DATA DE VALIDADE DO LOTE DO PRODUTO EM TODOS OS ARMAZENS
	@type Function
	@version 12.1.25
	@author Vitor Sousa
	@since 28/06/2020
	@return logical, l_ret
/*/
USER FUNCTION SD3250I()

	LOCAL AAREA1       := GETAREA()
	LOCAL AAREAB2      := SB2->(GETAREA())
	LOCAL AAREAB8      := SB8->(GETAREA())
	LOCAL AAREAH6      := SH6->(GETAREA())
	LOCAL L_RET        := .T.
	LOCAL CQRY         := ""
	LOCAL M_DATA       := ""
	LOCAL M_LOTE       := ""
	LOCAL M_PRODUTO    := ""

	DBSELECTAREA("SH6")
	IF CFILANT == "010101"

		M_LOTE		:= SH6->H6_LOTECTL
		M_PRODUTO	:= SH6->H6_PRODUTO

		// CONSULTA GERADA PARA VERIFICAR A VALIDADE DO LOTE E CORREÇÃO DA DATA EM TODOS OS ARMAZENS COM A DATA CORRETA
		CQRY:="SELECT MIN(H6_DTVALID) AS DATAVALID 			"+ CRLF
		CQRY+="FROM "+RETSQLNAME("SH6")+ " SH6 WITH (NOLOCK)"+ CRLF
		CQRY+="WHERE H6_LOTECTL= '" + M_LOTE +"'            "+ CRLF
		CQRY+="AND H6_PRODUTO= '" + M_PRODUTO         +"'   "+ CRLF
		CQRY+="AND H6_FILIAL='"+XFILIAL("SH6")+"'  			"+ CRLF
		CQRY+="AND D_E_L_E_T_<>'*'              			"+ CRLF

		TCQUERY CQRY NEW ALIAS "QRYPRO"

		M_DATA := ALLTRIM(QRYPRO->DATAVALID)

		QRYPRO->(DBCLOSEAREA())

		C_QRY := ""

		// ATUALIZA A VALIDADE DO LOTE NA TABELA DE LOTE
		C_QRY := " UPDATE " + RETSQLNAME("SB8") + " SET B8_DTVALID = '" + M_DATA +"'"+ CRLF
		C_QRY += " WHERE B8_LOTECTL= '" + M_LOTE +"'" 								 + CRLF
		C_QRY += " AND B8_PRODUTO= '" + M_PRODUTO +"'" 								 + CRLF
		C_QRY += " AND B8_FILIAL = '" + XFILIAL("SB8") + "'" 						 + CRLF

		TRYEXCEPTION

			TCCOMMIT(1,PROCNAME())    //BEGIN TRANSACTION

			IF ( TCSQLEXEC( C_QRY ) < 0 )
				CTCSQLERROR := TCSQLERROR()
				CONOUT( CMSGOUT += ( "[PROCNAME: " + PROCNAME() + "]" ) )
				CMSGOUT += CRLF
				CONOUT( CMSGOUT += ( "[PROCLINE:" + STR(PROCLINE()) + "]" ) )
				CMSGOUT += CRLF
				CONOUT( CMSGOUT += ( "[TCSQLERROR:" + CTCSQLERROR + "]" ) )
				CMSGOUT += CRLF
				USEREXCEPTION( CMSGOUT )
			ENDIF

			TCCOMMIT(2,PROCNAME())	//COMMIT
			TCCOMMIT(4)				//END TRANSACTION
		CATCHEXCEPTION
			TCCOMMIT(3)				//ROLLBACK
			TCCOMMIT(4)				//END TRANSACTION
		ENDEXCEPTION

		IF ALLTRIM(SC2->C2_FSLOTOP)=""
			DBSELECTAREA("SC2")
			RECLOCK("SC2", .F.)
				SC2->C2_FSLOTOP :=   SH6->H6_LOTECTL
			SC2->(MSUNLOCK())
		ENDIF

		DBSELECTAREA("SC2")
		RECLOCK("SC2", .F.)
			SC2->C2_FSSALDO := SC2->C2_FSSALDO - SH6->H6_QTDPROD
		MSUNLOCK()

	ENDIF
	RESTAREA(AAREA1)
	RESTAREA(AAREAB2)
	RESTAREA(AAREAB8)
	RESTAREA(AAREAH6)

RETURN L_RET
